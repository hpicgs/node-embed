language: cpp

sudo: required
dist: trusty

os:
  - linux
#  - osx

compiler:
  - gcc
  - clang

env:
  global:
    - CMAKE_OPTIONS="-DOPTION_BUILD_EXAMPLES=On"
  matrix:
    - CMAKE_CONFIGURATION=release BUILD_DIR=build
    - CMAKE_CONFIGURATION=debug BUILD_DIR=build-debug

#matrix:
#  exclude:
#  - os: osx
#    compiler: gcc

cache:
  directories:
    - externals/node-v9.0.0/out
  timeout: 1000

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - sourceline: 'ppa:beineri/opt-qt591-trusty'
    packages:
      - g++-4.9
      - cmake
      - cppcheck
      - clang-tidy-3.8
      - qt59base
      - qt59declarative
      - qt59quickcontrols

before_install:
  - if [ $TRAVIS_OS_NAME == linux ]; then CC=gcc-4.9 && CXX=g++-4.9; fi
#  - if [ $TRAVIS_OS_NAME == osx ]; then brew update && brew install qt5 cppcheck; fi

before_script:
  - cd externals
  - wget https://github.com/hpicgs/node/archive/node_lib.zip
  - unzip -q node_lib.zip
  - mv node-v9.0.0/out out
  - rm -rf node-v9.0.0
  - mv node-node_lib node-v9.0.0
  - mv out node-v9.0.0/out
  - cd node-v9.0.0
  - ./configure --shared
  - make -j5
  - cd ..
  - wget http://nodejs.org/dist/v9.0.0/node-v9.0.0-headers.tar.gz
  - tar -xzf node-v9.0.0-headers.tar.gz
  - cd ..
  - if [ $CMAKE_CONFIGURATION == release ]; then ./configure; fi
  - if [ $CMAKE_CONFIGURATION == debug ]; then ./configure debug; fi
  - mkdir $BUILD_DIR

script:
  - cd $BUILD_DIR
  - cmake ..
  - cmake --build .
  # - cmake --build . --target test
  - cmake --build . --target check-all
